// /app/api/line-notification/route.ts
import { NextResponse } from 'next/server';
import { Client } from '@line/bot-sdk';

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ENV ‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏≤‡∏Å‡∏Ç‡∏≤‡∏î‡∏Ñ‡πà‡∏≤
function getEnvOrThrow(key: string) {
  const value = process.env[key];
  console.log(`Environment variable ${key}:`, value ? 'SET' : 'NOT SET');
  if (!value) {
    throw new Error(`Environment variable ${key} is not set`);
  }
  return value;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
function getStatusText(status: string) {
  const statusMap = {
    'pending': '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
    'confirmed': '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
    'approved': '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß',
    'rejected': '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
    'cancelled': '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß',
    'completed': '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
    'no-show': '‡πÑ‡∏°‡πà‡∏°‡∏≤‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡∏î'
  };
  return statusMap[status] || status;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
function getStatusColor(status: string) {
  const colorMap = {
    'pending': '#ff9500',     // orange
    'confirmed': '#34c759',   // green
    'approved': '#34c759',    // green
    'rejected': '#ff3b30',    // red
    'cancelled': '#ff3b30',   // red
    'completed': '#007aff',   // blue
    'no-show': '#ff6b6b'      // light red
  };
  return colorMap[status] || '#8e8e93';
}

export async function POST(request: Request) {
  console.log('üöÄ LINE Notification API called');
  
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö environment variables
    console.log('üìã Checking environment variables...');
    const lineConfig = {
      channelAccessToken: getEnvOrThrow('LINE_CHANNEL_ACCESS_TOKEN'),
      channelSecret: getEnvOrThrow('LINE_CHANNEL_SECRET'),
    };
    console.log('‚úÖ Environment variables OK');

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á LINE client
    console.log('üîß Creating LINE client...');
    const client = new Client(lineConfig);
    console.log('‚úÖ LINE client created');

    // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å request
    console.log('üì• Parsing request data...');
    const data = await request.json();
    console.log('üì• Request data:', JSON.stringify(data, null, 2));
    
    const { userId, appointmentDetails, statusUpdateDetails } = data;
    
    if (!userId || (!appointmentDetails && !statusUpdateDetails)) {
      console.log('‚ùå Missing required data');
      return NextResponse.json({ success: false, message: 'Missing required data' }, { status: 400 });
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö BASE_URL
    console.log('üåê Checking BASE_URL...');
    let baseUrl = process.env.NEXT_PUBLIC_BASE_URL || '';
    console.log('üåê BASE_URL:', baseUrl);
    if (baseUrl.endsWith('/')) {
      baseUrl = baseUrl.slice(0, -1);
    }

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ö‡∏ö)
    let messageData;
    let messageType = 'appointment'; // default

    if (statusUpdateDetails) {
      // ‡∏Å‡∏£‡∏ì‡∏µ‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å status update
      messageType = 'status_update';
      messageData = {
        referenceNumber: statusUpdateDetails.referenceNumber,
        department: statusUpdateDetails.department,
        date: statusUpdateDetails.date,
        time: statusUpdateDetails.time,
        status: statusUpdateDetails.newStatus,
        oldStatus: statusUpdateDetails.oldStatus,
        statusMessage: statusUpdateDetails.statusMessage,
        adminNote: statusUpdateDetails.adminNote
      };
    } else {
      // ‡∏Å‡∏£‡∏ì‡∏µ‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏õ‡∏Å‡∏ï‡∏¥
      messageData = appointmentDetails;
    }

    const bookingStatus = messageData.status || 'pending';
    const statusText = getStatusText(bookingStatus);
    const statusColor = getStatusColor(bookingStatus);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message
    console.log('üìù Creating flex message...');
    
    let flexMessage;

    if (messageType === 'status_update') {
      // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      flexMessage = {
        type: 'flex',
        altText: `üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${messageData.referenceNumber} - ${statusText}`,
        contents: {
          type: 'bubble',
          header: {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: 'üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢',
                weight: 'bold',
                size: 'lg',
                color: '#ffffff'
              },
              {
                type: 'text',
                text: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï',
                size: 'sm',
                color: '#ffffff',
                margin: 'sm'
              }
            ],
            backgroundColor: statusColor,
            paddingAll: '20px'
          },
          body: {
            type: 'box',
            layout: 'vertical',
            contents: [
              // Status Change
              {
                type: 'box',
                layout: 'vertical',
                contents: [
                  {
                    type: 'text',
                    text: '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞',
                    weight: 'bold',
                    size: 'sm',
                    color: '#666666'
                  },
                  {
                    type: 'box',
                    layout: 'horizontal',
                    contents: [
                      {
                        type: 'text',
                        text: getStatusText(messageData.oldStatus),
                        size: 'sm',
                        color: '#999999',
                        decoration: 'line-through',
                        flex: 1
                      },
                      {
                        type: 'text',
                        text: '‚ûú',
                        size: 'sm',
                        color: '#666666',
                        align: 'center'
                      },
                      {
                        type: 'text',
                        text: statusText,
                        size: 'sm',
                        weight: 'bold',
                        color: statusColor,
                        flex: 1,
                        align: 'end'
                      }
                    ],
                    margin: 'sm'
                  }
                ],
                backgroundColor: '#f8fafc',
                paddingAll: '15px',
                cornerRadius: '8px',
                margin: 'lg'
              },
              {
                type: 'separator',
                margin: 'lg'
              },
              // Reference Number
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: messageData.referenceNumber,
                    weight: 'bold',
                    size: 'sm',
                    flex: 3,
                    align: 'end',
                    color: '#f59e0b'
                  }
                ],
                margin: 'lg'
              },
              // Department
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡πÅ‡∏ú‡∏ô‡∏Å',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: messageData.department,
                    weight: 'bold',
                    size: 'sm',
                    flex: 3,
                    align: 'end',
                    wrap: true
                  }
                ],
                margin: 'md'
              },
              // Date
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: messageData.date,
                    weight: 'bold',
                    size: 'sm',
                    flex: 3,
                    align: 'end',
                    wrap: true
                  }
                ],
                margin: 'md'
              },
              // Time
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡πÄ‡∏ß‡∏•‡∏≤',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: messageData.time,
                    weight: 'bold',
                    size: 'sm',
                    flex: 3,
                    align: 'end'
                  }
                ],
                margin: 'md'
              }
            ],
            paddingAll: '20px'
          }
        }
      };

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
      if (messageData.adminNote) {
        flexMessage.contents.body.contents.push(
          {
            type: 'separator',
            margin: 'lg'
          },
          {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: 'üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà',
                weight: 'bold',
                size: 'sm',
                color: '#6366f1'
              },
              {
                type: 'text',
                text: messageData.adminNote,
                size: 'sm',
                color: '#475569',
                wrap: true,
                margin: 'sm'
              }
            ],
            backgroundColor: '#eff6ff',
            paddingAll: '15px',
            cornerRadius: '8px',
            margin: 'lg'
          }
        );
      }

    } else {
      // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
      flexMessage = {
        type: 'flex',
        altText: `‡πÉ‡∏ö‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ${messageData.department} - ${messageData.date}`,
        contents: {
          type: 'bubble',
          header: {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: '‡πÉ‡∏ö‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢',
                weight: 'bold',
                size: 'xl',
                color: '#ffffff'
              },
              {
                type: 'text',
                text: '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
                size: 'sm',
                color: '#ffffff',
                margin: 'sm'
              }
            ],
            backgroundColor: '#2563eb',
            paddingAll: '20px'
          },
          body: {
            type: 'box',
            layout: 'vertical',
            contents: [
              // Status
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: statusText,
                    weight: 'bold',
                    color: statusColor,
                    size: 'sm',
                    flex: 3,
                    align: 'end'
                  }
                ],
                margin: 'lg'
              },
              {
                type: 'separator',
                margin: 'lg'
              },
              // Department
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡πÅ‡∏ú‡∏ô‡∏Å',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: messageData.department,
                    weight: 'bold',
                    size: 'sm',
                    flex: 3,
                    align: 'end',
                    wrap: true
                  }
                ],
                margin: 'lg'
              },
              // Date
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: messageData.date,
                    weight: 'bold',
                    size: 'sm',
                    flex: 3,
                    align: 'end',
                    wrap: true
                  }
                ],
                margin: 'md'
              },
              // Time
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡πÄ‡∏ß‡∏•‡∏≤',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: messageData.time,
                    weight: 'bold',
                    size: 'sm',
                    flex: 3,
                    align: 'end'
                  }
                ],
                margin: 'md'
              },
              // Reference Number
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'text',
                    text: '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç',
                    color: '#666666',
                    size: 'sm',
                    flex: 2
                  },
                  {
                    type: 'text',
                    text: messageData.referenceNumber,
                    weight: 'bold',
                    size: 'sm',
                    flex: 3,
                    align: 'end',
                    color: '#f59e0b'
                  }
                ],
                margin: 'md'
              },
              {
                type: 'separator',
                margin: 'lg'
              },
              // Note
              {
                type: 'box',
                layout: 'vertical',
                contents: [
                  {
                    type: 'text',
                    text: '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç',
                    weight: 'bold',
                    size: 'sm',
                    color: '#6366f1'
                  },
                  {
                    type: 'text',
                    text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î 15-30 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢',
                    size: 'xs',
                    color: '#64748b',
                    wrap: true,
                    margin: 'sm'
                  }
                ],
                backgroundColor: '#f8fafc',
                paddingAll: '15px',
                cornerRadius: '8px',
                margin: 'lg'
              }
            ],
            paddingAll: '20px'
          },
          footer: {
            type: 'box',
            layout: 'vertical',
            spacing: 'sm',
            contents: [
              {
                type: 'button',
                style: 'primary',
                height: 'sm',
                action: {
                  type: 'uri',
                  label: '‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
                  uri: `${baseUrl}/appointment/${messageData.referenceNumber}`
                },
                color: '#2563eb'
              },
              {
                type: 'box',
                layout: 'horizontal',
                contents: [
                  {
                    type: 'button',
                    style: 'secondary',
                    height: 'sm',
                    action: {
                      type: 'uri',
                      label: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà',
                      uri: 'tel:053771056'
                    },
                    color: '#64748b',
                    flex: 1
                  },
                  {
                    type: 'button',
                    style: 'secondary',
                    height: 'sm',
                    action: {
                      type: 'uri',
                      label: '‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà',
                      uri: 'https://maps.app.goo.gl/p1Zr7jQ8ziWZxNvv9?g_st=ipc'
                    },
                    color: '#64748b',
                    flex: 1
                  }
                ],
                spacing: 'sm'
              }
            ],
            paddingAll: '20px'
          }
        }
      };
    }

    console.log('‚úÖ Flex message created');

    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE
    console.log('üì§ Sending message to LINE...');
    console.log('üë§ User ID:', userId);
    
    await client.pushMessage(userId, flexMessage);
    console.log('‚úÖ Message sent successfully');

    return NextResponse.json({ success: true, message: 'Notification sent to LINE' });
    
  } catch (error) {
    console.error('üí• Error details:', {
      message: error.message,  
      stack: error.stack,
      name: error.name
    });
    
    return NextResponse.json({ 
      success: false, 
      message: 'Failed to send notification',
      error: error.message 
    }, { status: 500 });
  }
}