"use client"

import { useState } from "react"
import { useRouter } from "next/navigation"
import { FiEye, FiEyeOff } from "react-icons/fi"

const AdminSignUpPage = () => {
  const router = useRouter()
  const [username, setUsername] = useState("")
  const [position, setPosition] = useState("") // üÜï ‡πÄ‡∏û‡∏¥‡πà‡∏° state ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
  const [password, setPassword] = useState("")
  const [confirmPassword, setConfirmPassword] = useState("")
  const [showPassword, setShowPassword] = useState(false)
  const [loading, setLoading] = useState(false)

  const handleSignUp = async () => {
    if (
      username.trim() === "" ||
      !position || // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
      password.length < 6 ||
      password !== confirmPassword
    ) {
      alert("‚ö† ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô")
      return
    }

    setLoading(true)
    try {
      const response = await fetch("/api/admin/signup", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ username, password, position }), // ‚úÖ ‡∏™‡πà‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏õ backend
      })

      const data = await response.json()

      if (response.ok) {
        alert("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        router.push("/")
      } else {
        alert(`‚ùå ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${data.error ?? "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"}`)
      }
    } catch (error) {
      console.error("Error signing up admin:", error)
      alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
    }
    setLoading(false)
  }

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-b from-slate-100 to-gray-200 p-6">
      <div className="w-full max-w-md bg-white rounded-2xl shadow-lg p-8">
        <h2 className="text-2xl font-semibold text-center text-gray-800 mb-6">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</h2>

        {/* Username */}
        <div className="mb-4">
          <label className="block text-gray-700 mb-1">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß</label>
          <input
            type="text"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            className="w-full p-3 rounded-xl border border-gray-300 bg-gray-50 focus:ring-2 focus:ring-blue-500"
          />
        </div>

        {/* Position (input type text) */}
<div className="mb-4">
  <label className="block text-gray-700 mb-1">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</label>
  <input
    type="text"
    value={position}
    onChange={(e) => setPosition(e.target.value)}
    placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö, ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà"
    className="w-full p-3 rounded-xl border border-gray-300 bg-gray-50 focus:ring-2 focus:ring-blue-500"
  />
</div>


        {/* Password */}
        <div className="mb-4">
          <label className="block text-gray-700 mb-1">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
          <div className="relative">
            <input
              type={showPassword ? "text" : "password"}
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="w-full p-3 rounded-xl border border-gray-300 bg-gray-50 pr-12 focus:ring-2 focus:ring-blue-500"
            />
            <button
              type="button"
              onClick={() => setShowPassword(!showPassword)}
              className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500"
            >
              {showPassword ? <FiEyeOff /> : <FiEye />}
            </button>
          </div>
        </div>

        {/* Confirm Password */}
        <div className="mb-6">
          <label className="block text-gray-700 mb-1">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
          <input
            type={showPassword ? "text" : "password"}
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
            className="w-full p-3 rounded-xl border border-gray-300 bg-gray-50 focus:ring-2 focus:ring-blue-500"
          />
        </div>

        {/* Submit Button */}
        <button
          onClick={handleSignUp}
          disabled={loading}
          className="w-full py-3 bg-blue-600 text-white rounded-xl font-semibold hover:bg-blue-700 transition duration-300 disabled:opacity-50"
        >
          {loading ? "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏°‡∏±‡∏Ñ‡∏£..." : "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô"}
        </button>

        <p className="text-center text-gray-600 mt-4">
          ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ?{" "}
          <span
            className="text-blue-600 font-semibold cursor-pointer hover:underline"
            onClick={() => router.push("/")}
          >
            ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
          </span>
        </p>
      </div>
    </div>
  )
}

export default AdminSignUpPage
